diff --git a/Makefile b/Makefile
index d041c66..5b16ded 100644
--- a/Makefile
+++ b/Makefile
@@ -4,7 +4,7 @@
 
 LIBDIR=$(DESTDIR)/usr/lib/edna
 BINDIR=$(DESTDIR)/usr/bin
-INITDIR=$(DESTDIR)/etc/init.d
+INITDIR=$(DESTDIR)/etc/rc.d
 CONFDIR=$(DESTDIR)/etc/edna
 
 all:
diff --git a/daemon/edna b/daemon/edna
old mode 100644
new mode 100755
index 4cd0e5f..91870ba
--- a/daemon/edna
+++ b/daemon/edna
@@ -1,158 +1,78 @@
 #!/bin/sh
 #
 # Startup script for the edna mp3 mini server 
-#
-# chkconfig:2345 97 97
-# description: edna is a mini mp3 webserver 
-#
-# processname: python
-# pidfile: /var/run/ednad.pid
-# config: 
-
-# Source function library.
 
-#debian vars
-EDNA=/usr/bin/edna
-EDNACONF=/etc/edna/edna.conf
-PIDFILE=/var/run/edna.pid
-# redhat
-EDNAD=/usr/bin/ednad
-initdir=/etc/init.d
-pidfile=/var/run/ednad.pid
-
-PYTHON=`which python`
-PYTHONPATH=/usr/lib/edna
-export PYTHONPATH
-#
-# Determine which kind of configuration we're using
-#
-system=unknown
-if [ -f /etc/debian_version ]; then
-    system=debian
-elif [ -f /etc/redhat-release ]; then
-    system=redhat
-elif [ -f /etc/SuSE-release ]; then
-    system=suse
-else
-    echo "$0: Unknown system, please port" 1>&2
-    exit 1
-fi
+daemon_name="edna"
+daemon_conf="/etc/$daemon_name/$daemon_name.conf" 
+daemon_log="/var/log/$daemon_name/$daemon_name.log"
+daemon_path=`which $daemon_name`
+daemon_pid="/var/run/$daemon_name/$daemon_name.pid"
 
-if [ $system = redhat ]; then
-    . $initdir/functions
-fi
+. /etc/rc.conf
+. /etc/rc.d/functions
 
-if [ $system = suse ]; then
-    . /etc/rc.status
-fi
-
-[ -f $EDNA ] || exit 0
-
-
-RETVAL=0
-
-function suse () {
-    case "$1" in
-    start)
-        echo -n "Starting edna: "
-        startproc -p $PIDFILE $PYTHON $EDNA $EDNACONF >/dev/null 2>&1
-        rc_status -v
-        ;;
-    stop)
-        echo -n "Shutting down edna: "
-	killproc -p $PIDFILE $PYTHON $EDNA $EDNACONF >/dev/null 2>&1
-        rc_status -v
-        ;;
-    status)
-        echo -n "Checking for service edna: "
-        checkproc -p $PIDFILE $PYTHON $EDNA $EDNACONF
-        rc_status -v
-        ;;
-    restart)
-        $0 stop
-        $0 start
-        rc_status
-        ;;
-    *)
-        echo "Usage: $0 {start|stop|status|restart}"
-        exit 1
-    esac
+get_pid() {
+	pgrep -f "$daemon_path"
 }
 
-function redhat () {
-    case "$1" in
-    start)
-        echo -n "Starting ednad: "
-        daemon ${EDNAD}
-        echo
-        touch /var/lock/subsys/ednad
-        return $RETVAL
-        ;;
-    stop)
-        echo -n "Shutting down ednad: "
-        EDNADPID=
-        EDNADPID=$(cat $pidfile)
-        kill $EDNADPID
-        echo
-        rm -f /var/lock/subsys/ednad $pidfile
-        return $RETVAL
-        ;;
-    status)
-        EDNADPID=
-        EDNADPID=$(cat $pidfile)
-        echo -n "Checking for ednad, PID is : " $EDNADPID
-        echo 
-         ;;
-    restart)
-         stop
-         start
-         ;;
-    *)
-        echo "Usage: $0 {start | stop | restart | status}"
-	exit 1
-    esac
-}
-
-function debian () {
 case "$1" in
-    start)
-	echo -n 'Starting edna mp3 server: edna'
-	start-stop-daemon --start --quiet --pidfile $PIDFILE  --exec $EDNA -- --daemon $EDNACONF
-        echo "."
-        ;;
-
-    stop)
-	echo -n 'Stopping edna mp3 server: edna'
-	start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
-        echo "."
-	;;
-
-    reload)
-        start-stop-daemon --stop --signal 1 --oknodo --pidfile $PIDFILE
-        ;;
-
+  start)
+    stat_busy "Starting $daemon_name daemon"
+
+    PID=$(get_pid)
+    if [ -z "$PID" ]; then
+      [ -f "$daemon_pid" ] && rm -f "$daemon_pid"
+      # RUN
+      if [ ! -f "$daemon_log" ];then
+	mkdir /var/log/$daemon_name
+	touch $daemon_log
+      fi
+      chown nobody: $daemon_log
+      sudo -u nobody $daemon_path --daemon $daemon_conf
+      #
+      if [ $? -gt 0 ]; then
+        stat_fail
+        exit 1
+      else
+        echo $(get_pid) > $daemon_pid
+        add_daemon $daemon_name
+        stat_done
+      fi
+    else
+      stat_fail
+      exit 1
+    fi
+    ;;
+
+  stop)
+    stat_busy "Stopping $daemon_name daemon"
+    PID=$(get_pid)
+    # KILL
+    [ ! -z "$PID" ] && kill $PID &> /dev/null
+    #
+    if [ $? -gt 0 ]; then
+      stat_fail
+      exit 1
+    else
+      rm -f $daemon_pid &> /dev/null
+      rm_daemon $daemon_name
+      stat_done
+    fi
+    ;;
 
   restart)
-	echo -n 'Restarting edna mp3 server: edna'
-	start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE 
-	sleep 10
-	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $EDNA -- --daemon $EDNACONF
-	echo "."
-	;;
+    $0 stop
+    sleep 3
+    $0 start
+    ;;
+
+  status)
+    stat_busy "Checking $daemon_name status";
+    ck_status $daemon_name
+    ;;
 
   *)
-	echo "Usage: /etc/init.d/edna {start|stop|reload|restart}"
-	exit 1
+    echo "usage: $0 {start|stop|restart|status}"
 esac
-}
-
-if [ $system = debian ]; then
-	debian "$@"
-elif [ $system = redhat ]; then
-	redhat "$@"
-elif [ $system = suse ]; then
-        suse "$@"
-fi
-
 
 exit 0
diff --git a/edna.conf b/edna.conf
index a535f4a..4500c6c 100644
--- a/edna.conf
+++ b/edna.conf
@@ -9,9 +9,9 @@ port = 8080
 # robots=0
 
 # Where to fine the HTML page templates
-# template-dir = templates
+template-dir = /usr/lib/edna/templates
 # Where to find icons
-# resource-dir = resources
+resource-dir = /usr/lib/edna/resources
 
 #  Which HTML template to use?
 # template = default.ezt
@@ -38,7 +38,7 @@ zip = 0
 
 # log can specify "-" for stdout, or a file name. omitting this line
 # produces no log.
-log = -
+log = /var/log/edna/edna.log
 
 
 [acl]
@@ -76,8 +76,8 @@ log = -
 #dir3 = g:\MP3's = Bob CD
 
 # Unix example:
-dir1 = /mnt/cdrom = MP3 CDROM
-dir2 = /mp3/all-albums = Jukebox
+#dir1 = /mnt/cdrom = MP3 CDROM
+#dir2 = /mp3/all-albums = Jukebox
 
 
 [extra]
diff --git a/edna.py b/edna.py
index e643a58..cbfeb9e 100755
--- a/edna.py
+++ b/edna.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python2
 #
 # edna.py -- an MP3 server
 #
@@ -29,6 +29,10 @@
 
 __version__ = '0.6'
 
+import imp
+imp.load_source('ezt','/usr/lib/edna/ezt.py')
+imp.load_source('MP3Info','/usr/lib/edna/MP3Info.py')
+
 import SocketServer
 import BaseHTTPServer
 import ConfigParser
@@ -1162,6 +1166,6 @@ if __name__ == '__main__':
     raise systemExit
 
   if daemon_mode:
-    daemonize('/dev/null', '/var/log/edna.log', '/var/log/edna.log', '/var/run/edna.pid')
+    daemonize('/dev/null', '/var/log/edna/edna.log', '/var/log/edna/edna.log', '/var/run/edna/edna.pid')
 
   run_server(fname)
